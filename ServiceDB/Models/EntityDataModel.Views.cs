//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsDF00A9B22AE326960EAB556F26514273C0D3FAFA5044DC32505F6C6AF576C7E6))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsDF00A9B22AE326960EAB556F26514273C0D3FAFA5044DC32505F6C6AF576C7E6 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsDF00A9B22AE326960EAB556F26514273C0D3FAFA5044DC32505F6C6AF576C7E6()
        {
            this.EdmEntityContainerName = "EntityDataModelContainer";
            this.StoreEntityContainerName = "EntityDataModelStoreContainer";
            this.HashOverMappingClosure = "aa828a3701c6ae20db6fe3f2abc8b3e78a79e95a6ee8d68763684eac3a375d31";
            this.HashOverAllExtentViews = "367036b6000a5bc7adb35ebad63de656129c8cfecbeb04a313ff57ef5fb15db6";
            this.ViewCount = 28;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Contragents
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Contragents", @"
    SELECT VALUE -- Constructing Contragents
        [EntityDataModel.Store.Contragents](T1.Contragents_Id, T1.Contragents_FIO, T1.Contragents_Phone, T1.Contragents_Address, T1.Contragents_EMail, T1.[Contragents.Updated_at])
    FROM (
        SELECT 
            T.Id AS Contragents_Id, 
            T.FIO AS Contragents_FIO, 
            T.Phone AS Contragents_Phone, 
            T.Address AS Contragents_Address, 
            T.EMail AS Contragents_EMail, 
            T.Updated_at AS [Contragents.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Contragents AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Parts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Parts", @"
    SELECT VALUE -- Constructing Parts
        [EntityDataModel.Store.Parts](T1.Parts_Id, T1.[Parts.Category_id], T1.[Parts.Vendor_id], T1.[Parts.Part_num], T1.Parts_Description, T1.[Parts.Updated_at])
    FROM (
        SELECT 
            T.Id AS Parts_Id, 
            T.Category_id AS [Parts.Category_id], 
            T.Vendor_id AS [Parts.Vendor_id], 
            T.Part_num AS [Parts.Part_num], 
            T.Description AS Parts_Description, 
            T.Updated_at AS [Parts.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Parts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Categories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Categories", @"
    SELECT VALUE -- Constructing Categories
        [EntityDataModel.Store.Categories](T1.Categories_Id, T1.Categories_Name, T1.[Categories.Updated_at])
    FROM (
        SELECT 
            T.Id AS Categories_Id, 
            T.Name AS Categories_Name, 
            T.Updated_at AS [Categories.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Categories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Warranties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Warranties", @"
    SELECT VALUE -- Constructing Warranties
        [EntityDataModel.Store.Warranties](T1.Warranties_Id, T1.Warranties_Name, T1.[Warranties.Updated_at])
    FROM (
        SELECT 
            T.Id AS Warranties_Id, 
            T.Name AS Warranties_Name, 
            T.Updated_at AS [Warranties.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Warranties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Employees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Employees", @"
    SELECT VALUE -- Constructing Employees
        [EntityDataModel.Store.Employees](T1.Employees_Id, T1.Employees_FIO, T1.Employees_Address, T1.Employees_Phone, T1.Employees_Email, T1.[Employees.Updated_at])
    FROM (
        SELECT 
            T.Id AS Employees_Id, 
            T.FIO AS Employees_FIO, 
            T.Address AS Employees_Address, 
            T.Phone AS Employees_Phone, 
            T.Email AS Employees_Email, 
            T.Updated_at AS [Employees.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Employees AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Vendors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Vendors", @"
    SELECT VALUE -- Constructing Vendors
        [EntityDataModel.Store.Vendors](T1.Vendors_Id, T1.Vendors_Name, T1.[Vendors.Updated_at])
    FROM (
        SELECT 
            T.Id AS Vendors_Id, 
            T.Name AS Vendors_Name, 
            T.Updated_at AS [Vendors.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Vendors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.RequestItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.RequestItems", @"
    SELECT VALUE -- Constructing RequestItems
        [EntityDataModel.Store.RequestItems](T1.RequestItems_Id, T1.[RequestItems.Request_id], T1.[RequestItems.Good_id], T1.[RequestItems.Serial_num], T1.[RequestItems.Warranty_id], T1.[RequestItems.Employee_id], T1.RequestItems_Description, T1.RequestItems_Packing, T1.RequestItems_Defect, T1.[RequestItems.More_info], T1.[RequestItems.Diagnostic_result], T1.[RequestItems.State_id], T1.[RequestItems.Updated_at])
    FROM (
        SELECT 
            T.Id AS RequestItems_Id, 
            T.Request_id AS [RequestItems.Request_id], 
            T.Good_id AS [RequestItems.Good_id], 
            T.Serial_num AS [RequestItems.Serial_num], 
            T.Warranty_id AS [RequestItems.Warranty_id], 
            T.Employee_id AS [RequestItems.Employee_id], 
            T.Description AS RequestItems_Description, 
            T.Packing AS RequestItems_Packing, 
            T.Defect AS RequestItems_Defect, 
            T.More_info AS [RequestItems.More_info], 
            T.Diagnostic_result AS [RequestItems.Diagnostic_result], 
            T.State_id AS [RequestItems.State_id], 
            T.Updated_at AS [RequestItems.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.RequestItems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.States
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.States", @"
    SELECT VALUE -- Constructing States
        [EntityDataModel.Store.States](T1.States_Id, T1.States_Name, T1.[States.Updated_at])
    FROM (
        SELECT 
            T.Id AS States_Id, 
            T.Name AS States_Name, 
            T.Updated_at AS [States.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.States AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Suppliers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Suppliers", @"
    SELECT VALUE -- Constructing Suppliers
        [EntityDataModel.Store.Suppliers](T1.Suppliers_Id, T1.Suppliers_Name, T1.Suppliers_Phone, T1.Suppliers_Address, T1.[Suppliers.Contact_name], T1.[Suppliers.Updated_at])
    FROM (
        SELECT 
            T.Id AS Suppliers_Id, 
            T.Name AS Suppliers_Name, 
            T.Phone AS Suppliers_Phone, 
            T.Address AS Suppliers_Address, 
            T.Contact_name AS [Suppliers.Contact_name], 
            T.Updated_at AS [Suppliers.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Suppliers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.RequestItemParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.RequestItemParts", @"
    SELECT VALUE -- Constructing RequestItemParts
        [EntityDataModel.Store.RequestItemParts](T1.RequestItemParts_Id, T1.[RequestItemParts.RequestItem_id], T1.[RequestItemParts.Part_id], T1.[RequestItemParts.Serial_num], T1.[RequestItemParts.Supplier_id], T1.[RequestItemParts.Date_in], T1.RequestItemParts_Price, T1.[RequestItemParts.Updated_at])
    FROM (
        SELECT 
            T.Id AS RequestItemParts_Id, 
            T.RequestItem_id AS [RequestItemParts.RequestItem_id], 
            T.Part_id AS [RequestItemParts.Part_id], 
            T.Serial_num AS [RequestItemParts.Serial_num], 
            T.Supplier_id AS [RequestItemParts.Supplier_id], 
            T.Date_in AS [RequestItemParts.Date_in], 
            T.Price AS RequestItemParts_Price, 
            T.Updated_at AS [RequestItemParts.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.RequestItemParts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Requests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Requests", @"
    SELECT VALUE -- Constructing Requests
        [EntityDataModel.Store.Requests](T1.Requests_Id, T1.Requests_Date, T1.[Requests.Contragent_id], T1.[Requests.State_id], T1.[Requests.Updated_at])
    FROM (
        SELECT 
            T.Id AS Requests_Id, 
            T.Date AS Requests_Date, 
            T.Contragent_id AS [Requests.Contragent_id], 
            T.State_id AS [Requests.State_id], 
            T.Updated_at AS [Requests.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Requests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Goods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Goods", @"
    SELECT VALUE -- Constructing Goods
        [EntityDataModel.Store.Goods](T1.Goods_Id, T1.Goods_Name, T1.[Goods.Updated_at])
    FROM (
        SELECT 
            T.Id AS Goods_Id, 
            T.Name AS Goods_Name, 
            T.Updated_at AS [Goods.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Goods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.Services
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.Services", @"
    SELECT VALUE -- Constructing Services
        [EntityDataModel.Store.Services](T1.Services_Id, T1.Services_Name, T1.[Services.Updated_at])
    FROM (
        SELECT 
            T.Id AS Services_Id, 
            T.Name AS Services_Name, 
            T.Updated_at AS [Services.Updated_at], 
            True AS _from0
        FROM EntityDataModelContainer.Services AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelStoreContainer.RequestItemServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelStoreContainer.RequestItemServices", @"
    SELECT VALUE -- Constructing RequestItemServices
        [EntityDataModel.Store.RequestItemServices](T1.RequestItemServices_Id, T1.[RequestItemServices.RequestItem_id], T1.[RequestItemServices.Service_id])
    FROM (
        SELECT 
            T.Id AS RequestItemServices_Id, 
            T.RequestItem_id AS [RequestItemServices.RequestItem_id], 
            T.Service_id AS [RequestItemServices.Service_id], 
            True AS _from0
        FROM EntityDataModelContainer.RequestItemServices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Contragents
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Contragents", @"
    SELECT VALUE -- Constructing Contragents
        [EntityDataModel.Contragent](T1.Contragent_Id, T1.Contragent_FIO, T1.Contragent_Phone, T1.Contragent_Address, T1.Contragent_EMail, T1.[Contragent.Updated_at])
    FROM (
        SELECT 
            T.Id AS Contragent_Id, 
            T.FIO AS Contragent_FIO, 
            T.Phone AS Contragent_Phone, 
            T.Address AS Contragent_Address, 
            T.EMail AS Contragent_EMail, 
            T.Updated_at AS [Contragent.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Contragents AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Parts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Parts", @"
    SELECT VALUE -- Constructing Parts
        [EntityDataModel.Part](T1.Part_Id, T1.[Part.Category_id], T1.[Part.Vendor_id], T1.[Part.Part_num], T1.Part_Description, T1.[Part.Updated_at])
    FROM (
        SELECT 
            T.Id AS Part_Id, 
            T.Category_id AS [Part.Category_id], 
            T.Vendor_id AS [Part.Vendor_id], 
            T.Part_num AS [Part.Part_num], 
            T.Description AS Part_Description, 
            T.Updated_at AS [Part.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Parts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Categories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Categories", @"
    SELECT VALUE -- Constructing Categories
        [EntityDataModel.Category](T1.Category_Id, T1.Category_Name, T1.[Category.Updated_at])
    FROM (
        SELECT 
            T.Id AS Category_Id, 
            T.Name AS Category_Name, 
            T.Updated_at AS [Category.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Categories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Warranties
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Warranties", @"
    SELECT VALUE -- Constructing Warranties
        [EntityDataModel.Warranty](T1.Warranty_Id, T1.Warranty_Name, T1.[Warranty.Updated_at])
    FROM (
        SELECT 
            T.Id AS Warranty_Id, 
            T.Name AS Warranty_Name, 
            T.Updated_at AS [Warranty.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Warranties AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Employees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Employees", @"
    SELECT VALUE -- Constructing Employees
        [EntityDataModel.Employee](T1.Employee_Id, T1.Employee_FIO, T1.Employee_Address, T1.Employee_Phone, T1.Employee_Email, T1.[Employee.Updated_at])
    FROM (
        SELECT 
            T.Id AS Employee_Id, 
            T.FIO AS Employee_FIO, 
            T.Address AS Employee_Address, 
            T.Phone AS Employee_Phone, 
            T.Email AS Employee_Email, 
            T.Updated_at AS [Employee.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Employees AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Vendors
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Vendors", @"
    SELECT VALUE -- Constructing Vendors
        [EntityDataModel.Vendor](T1.Vendor_Id, T1.Vendor_Name, T1.[Vendor.Updated_at])
    FROM (
        SELECT 
            T.Id AS Vendor_Id, 
            T.Name AS Vendor_Name, 
            T.Updated_at AS [Vendor.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Vendors AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.RequestItems
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.RequestItems", @"
    SELECT VALUE -- Constructing RequestItems
        [EntityDataModel.RequestItem](T1.RequestItem_Id, T1.[RequestItem.Request_id], T1.[RequestItem.Good_id], T1.[RequestItem.Serial_num], T1.[RequestItem.Warranty_id], T1.[RequestItem.Employee_id], T1.RequestItem_Description, T1.RequestItem_Packing, T1.RequestItem_Defect, T1.[RequestItem.More_info], T1.[RequestItem.Diagnostic_result], T1.[RequestItem.State_id], T1.[RequestItem.Updated_at])
    FROM (
        SELECT 
            T.Id AS RequestItem_Id, 
            T.Request_id AS [RequestItem.Request_id], 
            T.Good_id AS [RequestItem.Good_id], 
            T.Serial_num AS [RequestItem.Serial_num], 
            T.Warranty_id AS [RequestItem.Warranty_id], 
            T.Employee_id AS [RequestItem.Employee_id], 
            T.Description AS RequestItem_Description, 
            T.Packing AS RequestItem_Packing, 
            T.Defect AS RequestItem_Defect, 
            T.More_info AS [RequestItem.More_info], 
            T.Diagnostic_result AS [RequestItem.Diagnostic_result], 
            T.State_id AS [RequestItem.State_id], 
            T.Updated_at AS [RequestItem.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.RequestItems AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.States
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.States", @"
    SELECT VALUE -- Constructing States
        [EntityDataModel.State](T1.State_Id, T1.State_Name, T1.[State.Updated_at])
    FROM (
        SELECT 
            T.Id AS State_Id, 
            T.Name AS State_Name, 
            T.Updated_at AS [State.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.States AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Suppliers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Suppliers", @"
    SELECT VALUE -- Constructing Suppliers
        [EntityDataModel.Supplier](T1.Supplier_Id, T1.Supplier_Name, T1.Supplier_Phone, T1.Supplier_Address, T1.[Supplier.Contact_name], T1.[Supplier.Updated_at])
    FROM (
        SELECT 
            T.Id AS Supplier_Id, 
            T.Name AS Supplier_Name, 
            T.Phone AS Supplier_Phone, 
            T.Address AS Supplier_Address, 
            T.Contact_name AS [Supplier.Contact_name], 
            T.Updated_at AS [Supplier.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Suppliers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.RequestItemParts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.RequestItemParts", @"
    SELECT VALUE -- Constructing RequestItemParts
        [EntityDataModel.RequestItemPart](T1.RequestItemPart_Id, T1.[RequestItemPart.RequestItem_id], T1.[RequestItemPart.Part_id], T1.[RequestItemPart.Serial_num], T1.[RequestItemPart.Supplier_id], T1.[RequestItemPart.Date_in], T1.RequestItemPart_Price, T1.[RequestItemPart.Updated_at])
    FROM (
        SELECT 
            T.Id AS RequestItemPart_Id, 
            T.RequestItem_id AS [RequestItemPart.RequestItem_id], 
            T.Part_id AS [RequestItemPart.Part_id], 
            T.Serial_num AS [RequestItemPart.Serial_num], 
            T.Supplier_id AS [RequestItemPart.Supplier_id], 
            T.Date_in AS [RequestItemPart.Date_in], 
            T.Price AS RequestItemPart_Price, 
            T.Updated_at AS [RequestItemPart.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.RequestItemParts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Requests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Requests", @"
    SELECT VALUE -- Constructing Requests
        [EntityDataModel.Request](T1.Request_Id, T1.Request_Date, T1.[Request.Contragent_id], T1.[Request.State_id], T1.[Request.Updated_at])
    FROM (
        SELECT 
            T.Id AS Request_Id, 
            T.Date AS Request_Date, 
            T.Contragent_id AS [Request.Contragent_id], 
            T.State_id AS [Request.State_id], 
            T.Updated_at AS [Request.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Requests AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Goods
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Goods", @"
    SELECT VALUE -- Constructing Goods
        [EntityDataModel.Good](T1.Good_Id, T1.Good_Name, T1.[Good.Updated_at])
    FROM (
        SELECT 
            T.Id AS Good_Id, 
            T.Name AS Good_Name, 
            T.Updated_at AS [Good.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Goods AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.Services
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.Services", @"
    SELECT VALUE -- Constructing Services
        [EntityDataModel.Service](T1.Service_Id, T1.Service_Name, T1.[Service.Updated_at])
    FROM (
        SELECT 
            T.Id AS Service_Id, 
            T.Name AS Service_Name, 
            T.Updated_at AS [Service.Updated_at], 
            True AS _from0
        FROM EntityDataModelStoreContainer.Services AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EntityDataModelContainer.RequestItemServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityDataModelContainer.RequestItemServices", @"
    SELECT VALUE -- Constructing RequestItemServices
        [EntityDataModel.RequestItemService](T1.RequestItemService_Id, T1.[RequestItemService.RequestItem_id], T1.[RequestItemService.Service_id])
    FROM (
        SELECT 
            T.Id AS RequestItemService_Id, 
            T.RequestItem_id AS [RequestItemService.RequestItem_id], 
            T.Service_id AS [RequestItemService.Service_id], 
            True AS _from0
        FROM EntityDataModelStoreContainer.RequestItemServices AS T
    ) AS T1");
        }
    }
}
