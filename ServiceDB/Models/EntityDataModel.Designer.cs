//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EntityDataModel", "CategoryParts", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Category), "Parts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.Part), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "VendorPart", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Vendor), "Part", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.Part), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "WarrantyRequest", "Warranty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Warranty), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItem), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "EmployeeRequest", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Employee), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItem), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "PartRequestPart", "Part", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Part), "RequestPart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItemPart), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "SupplierRequestPart", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Supplier), "RequestPart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItemPart), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "RequestItemRequestItemPart", "RequestItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.RequestItem), "RequestItemPart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItemPart), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "RequestItemRequestItemService", "RequestItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.RequestItem), "RequestItemService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItemService), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "ServiceRequestItemService", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Service), "RequestItemService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItemService), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "RequestRequestItem", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Request), "RequestItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItem), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "StateRequestItem", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.State), "RequestItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItem), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "StateRequest", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.State), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.Request), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "ContragentRequest", "Contragent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Contragent), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.Request), true)]
[assembly: EdmRelationshipAttribute("EntityDataModel", "GoodRequestItem", "Good", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ServiceDB.Models.Good), "RequestItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ServiceDB.Models.RequestItem), true)]

#endregion

namespace ServiceDB.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EntityDataModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EntityDataModelContainer object using the connection string found in the 'EntityDataModelContainer' section of the application configuration file.
        /// </summary>
        public EntityDataModelContainer() : base("name=EntityDataModelContainer", "EntityDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityDataModelContainer object.
        /// </summary>
        public EntityDataModelContainer(string connectionString) : base(connectionString, "EntityDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EntityDataModelContainer object.
        /// </summary>
        public EntityDataModelContainer(EntityConnection connection) : base(connection, "EntityDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contragent> Contragents
        {
            get
            {
                if ((_Contragents == null))
                {
                    _Contragents = base.CreateObjectSet<Contragent>("Contragents");
                }
                return _Contragents;
            }
        }
        private ObjectSet<Contragent> _Contragents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Part> Parts
        {
            get
            {
                if ((_Parts == null))
                {
                    _Parts = base.CreateObjectSet<Part>("Parts");
                }
                return _Parts;
            }
        }
        private ObjectSet<Part> _Parts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Warranty> Warranties
        {
            get
            {
                if ((_Warranties == null))
                {
                    _Warranties = base.CreateObjectSet<Warranty>("Warranties");
                }
                return _Warranties;
            }
        }
        private ObjectSet<Warranty> _Warranties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vendor> Vendors
        {
            get
            {
                if ((_Vendors == null))
                {
                    _Vendors = base.CreateObjectSet<Vendor>("Vendors");
                }
                return _Vendors;
            }
        }
        private ObjectSet<Vendor> _Vendors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestItem> RequestItems
        {
            get
            {
                if ((_RequestItems == null))
                {
                    _RequestItems = base.CreateObjectSet<RequestItem>("RequestItems");
                }
                return _RequestItems;
            }
        }
        private ObjectSet<RequestItem> _RequestItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestItemPart> RequestItemParts
        {
            get
            {
                if ((_RequestItemParts == null))
                {
                    _RequestItemParts = base.CreateObjectSet<RequestItemPart>("RequestItemParts");
                }
                return _RequestItemParts;
            }
        }
        private ObjectSet<RequestItemPart> _RequestItemParts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Request> Requests
        {
            get
            {
                if ((_Requests == null))
                {
                    _Requests = base.CreateObjectSet<Request>("Requests");
                }
                return _Requests;
            }
        }
        private ObjectSet<Request> _Requests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Good> Goods
        {
            get
            {
                if ((_Goods == null))
                {
                    _Goods = base.CreateObjectSet<Good>("Goods");
                }
                return _Goods;
            }
        }
        private ObjectSet<Good> _Goods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Service> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Service>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Service> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestItemService> RequestItemServices
        {
            get
            {
                if ((_RequestItemServices == null))
                {
                    _RequestItemServices = base.CreateObjectSet<RequestItemService>("RequestItemServices");
                }
                return _RequestItemServices;
            }
        }
        private ObjectSet<RequestItemService> _RequestItemServices;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contragents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContragents(Contragent contragent)
        {
            base.AddObject("Contragents", contragent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParts(Part part)
        {
            base.AddObject("Parts", part);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Warranties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarranties(Warranty warranty)
        {
            base.AddObject("Warranties", warranty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vendors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendors(Vendor vendor)
        {
            base.AddObject("Vendors", vendor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestItems(RequestItem requestItem)
        {
            base.AddObject("RequestItems", requestItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestItemParts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestItemParts(RequestItemPart requestItemPart)
        {
            base.AddObject("RequestItemParts", requestItemPart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Requests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequests(Request request)
        {
            base.AddObject("Requests", request);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Goods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoods(Good good)
        {
            base.AddObject("Goods", good);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Service service)
        {
            base.AddObject("Services", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestItemServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestItemServices(RequestItemService requestItemService)
        {
            base.AddObject("RequestItemServices", requestItemService);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated_at;
        partial void OnUpdated_atChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "CategoryParts", "Parts")]
        public EntityCollection<Part> Parts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Part>("EntityDataModel.CategoryParts", "Parts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Part>("EntityDataModel.CategoryParts", "Parts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Contragent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contragent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contragent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fIO">Initial value of the FIO property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="eMail">Initial value of the EMail property.</param>
        public static Contragent CreateContragent(global::System.Int32 id, global::System.String fIO, global::System.String phone, global::System.String address, global::System.String eMail)
        {
            Contragent contragent = new Contragent();
            contragent.Id = id;
            contragent.FIO = fIO;
            contragent.Phone = phone;
            contragent.Address = address;
            contragent.EMail = eMail;
            return contragent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIO
        {
            get
            {
                return _FIO;
            }
            set
            {
                OnFIOChanging(value);
                ReportPropertyChanging("FIO");
                _FIO = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FIO");
                OnFIOChanged();
            }
        }
        private global::System.String _FIO;
        partial void OnFIOChanging(global::System.String value);
        partial void OnFIOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated_at;
        partial void OnUpdated_atChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ContragentRequest", "Request")]
        public EntityCollection<Request> Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("EntityDataModel.ContragentRequest", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("EntityDataModel.ContragentRequest", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fIO">Initial value of the FIO property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, global::System.String fIO, global::System.String phone, global::System.String email)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.FIO = fIO;
            employee.Phone = phone;
            employee.Email = email;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIO
        {
            get
            {
                return _FIO;
            }
            set
            {
                OnFIOChanging(value);
                ReportPropertyChanging("FIO");
                _FIO = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FIO");
                OnFIOChanged();
            }
        }
        private global::System.String _FIO;
        partial void OnFIOChanging(global::System.String value);
        partial void OnFIOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated_at;
        partial void OnUpdated_atChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "EmployeeRequest", "Request")]
        public EntityCollection<RequestItem> Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItem>("EntityDataModel.EmployeeRequest", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItem>("EntityDataModel.EmployeeRequest", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Good")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Good : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Good object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="updated_at">Initial value of the Updated_at property.</param>
        public static Good CreateGood(global::System.Int32 id, global::System.String name, global::System.DateTime updated_at)
        {
            Good good = new Good();
            good.Id = id;
            good.Name = name;
            good.Updated_at = updated_at;
            return good;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private global::System.DateTime _Updated_at;
        partial void OnUpdated_atChanging(global::System.DateTime value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "GoodRequestItem", "RequestItem")]
        public EntityCollection<RequestItem> RequestItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItem>("EntityDataModel.GoodRequestItem", "RequestItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItem>("EntityDataModel.GoodRequestItem", "RequestItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Part")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Part : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Part object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="category_id">Initial value of the Category_id property.</param>
        /// <param name="vendor_id">Initial value of the Vendor_id property.</param>
        /// <param name="part_num">Initial value of the Part_num property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Part CreatePart(global::System.Int32 id, global::System.Int32 category_id, global::System.Int32 vendor_id, global::System.String part_num, global::System.String description)
        {
            Part part = new Part();
            part.Id = id;
            part.Category_id = category_id;
            part.Vendor_id = vendor_id;
            part.Part_num = part_num;
            part.Description = description;
            return part;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Category_id
        {
            get
            {
                return _Category_id;
            }
            set
            {
                OnCategory_idChanging(value);
                ReportPropertyChanging("Category_id");
                _Category_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Category_id");
                OnCategory_idChanged();
            }
        }
        private global::System.Int32 _Category_id;
        partial void OnCategory_idChanging(global::System.Int32 value);
        partial void OnCategory_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vendor_id
        {
            get
            {
                return _Vendor_id;
            }
            set
            {
                OnVendor_idChanging(value);
                ReportPropertyChanging("Vendor_id");
                _Vendor_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vendor_id");
                OnVendor_idChanged();
            }
        }
        private global::System.Int32 _Vendor_id;
        partial void OnVendor_idChanging(global::System.Int32 value);
        partial void OnVendor_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Part_num
        {
            get
            {
                return _Part_num;
            }
            set
            {
                OnPart_numChanging(value);
                ReportPropertyChanging("Part_num");
                _Part_num = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Part_num");
                OnPart_numChanged();
            }
        }
        private global::System.String _Part_num;
        partial void OnPart_numChanging(global::System.String value);
        partial void OnPart_numChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated_at;
        partial void OnUpdated_atChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "CategoryParts", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("EntityDataModel.CategoryParts", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("EntityDataModel.CategoryParts", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("EntityDataModel.CategoryParts", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("EntityDataModel.CategoryParts", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "VendorPart", "Vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("EntityDataModel.VendorPart", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("EntityDataModel.VendorPart", "Vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("EntityDataModel.VendorPart", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("EntityDataModel.VendorPart", "Vendor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "PartRequestPart", "RequestPart")]
        public EntityCollection<RequestItemPart> RequestPart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItemPart>("EntityDataModel.PartRequestPart", "RequestPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItemPart>("EntityDataModel.PartRequestPart", "RequestPart", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Request")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Request : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Request object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="contragent_id">Initial value of the Contragent_id property.</param>
        /// <param name="state_id">Initial value of the State_id property.</param>
        /// <param name="updated_at">Initial value of the Updated_at property.</param>
        public static Request CreateRequest(global::System.Int32 id, global::System.DateTime date, global::System.Int32 contragent_id, global::System.Int32 state_id, global::System.DateTime updated_at)
        {
            Request request = new Request();
            request.Id = id;
            request.Date = date;
            request.Contragent_id = contragent_id;
            request.State_id = state_id;
            request.Updated_at = updated_at;
            return request;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Contragent_id
        {
            get
            {
                return _Contragent_id;
            }
            set
            {
                OnContragent_idChanging(value);
                ReportPropertyChanging("Contragent_id");
                _Contragent_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Contragent_id");
                OnContragent_idChanged();
            }
        }
        private global::System.Int32 _Contragent_id;
        partial void OnContragent_idChanging(global::System.Int32 value);
        partial void OnContragent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State_id
        {
            get
            {
                return _State_id;
            }
            set
            {
                OnState_idChanging(value);
                ReportPropertyChanging("State_id");
                _State_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State_id");
                OnState_idChanged();
            }
        }
        private global::System.Int32 _State_id;
        partial void OnState_idChanging(global::System.Int32 value);
        partial void OnState_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private global::System.DateTime _Updated_at;
        partial void OnUpdated_atChanging(global::System.DateTime value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "RequestRequestItem", "RequestItem")]
        public EntityCollection<RequestItem> RequestItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItem>("EntityDataModel.RequestRequestItem", "RequestItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItem>("EntityDataModel.RequestRequestItem", "RequestItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "StateRequest", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("EntityDataModel.StateRequest", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("EntityDataModel.StateRequest", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("EntityDataModel.StateRequest", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("EntityDataModel.StateRequest", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ContragentRequest", "Contragent")]
        public Contragent Contragent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contragent>("EntityDataModel.ContragentRequest", "Contragent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contragent>("EntityDataModel.ContragentRequest", "Contragent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contragent> ContragentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contragent>("EntityDataModel.ContragentRequest", "Contragent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contragent>("EntityDataModel.ContragentRequest", "Contragent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="RequestItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="request_id">Initial value of the Request_id property.</param>
        /// <param name="good_id">Initial value of the Good_id property.</param>
        /// <param name="serial_num">Initial value of the Serial_num property.</param>
        /// <param name="warranty_id">Initial value of the Warranty_id property.</param>
        /// <param name="employee_id">Initial value of the Employee_id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="packing">Initial value of the Packing property.</param>
        /// <param name="defect">Initial value of the Defect property.</param>
        /// <param name="state_id">Initial value of the State_id property.</param>
        public static RequestItem CreateRequestItem(global::System.Int32 id, global::System.Int32 request_id, global::System.Int32 good_id, global::System.String serial_num, global::System.Int32 warranty_id, global::System.Int32 employee_id, global::System.String description, global::System.String packing, global::System.String defect, global::System.Int32 state_id)
        {
            RequestItem requestItem = new RequestItem();
            requestItem.Id = id;
            requestItem.Request_id = request_id;
            requestItem.Good_id = good_id;
            requestItem.Serial_num = serial_num;
            requestItem.Warranty_id = warranty_id;
            requestItem.Employee_id = employee_id;
            requestItem.Description = description;
            requestItem.Packing = packing;
            requestItem.Defect = defect;
            requestItem.State_id = state_id;
            return requestItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Request_id
        {
            get
            {
                return _Request_id;
            }
            set
            {
                OnRequest_idChanging(value);
                ReportPropertyChanging("Request_id");
                _Request_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Request_id");
                OnRequest_idChanged();
            }
        }
        private global::System.Int32 _Request_id;
        partial void OnRequest_idChanging(global::System.Int32 value);
        partial void OnRequest_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Good_id
        {
            get
            {
                return _Good_id;
            }
            set
            {
                OnGood_idChanging(value);
                ReportPropertyChanging("Good_id");
                _Good_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Good_id");
                OnGood_idChanged();
            }
        }
        private global::System.Int32 _Good_id;
        partial void OnGood_idChanging(global::System.Int32 value);
        partial void OnGood_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Serial_num
        {
            get
            {
                return _Serial_num;
            }
            set
            {
                OnSerial_numChanging(value);
                ReportPropertyChanging("Serial_num");
                _Serial_num = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Serial_num");
                OnSerial_numChanged();
            }
        }
        private global::System.String _Serial_num;
        partial void OnSerial_numChanging(global::System.String value);
        partial void OnSerial_numChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Warranty_id
        {
            get
            {
                return _Warranty_id;
            }
            set
            {
                OnWarranty_idChanging(value);
                ReportPropertyChanging("Warranty_id");
                _Warranty_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Warranty_id");
                OnWarranty_idChanged();
            }
        }
        private global::System.Int32 _Warranty_id;
        partial void OnWarranty_idChanging(global::System.Int32 value);
        partial void OnWarranty_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Employee_id
        {
            get
            {
                return _Employee_id;
            }
            set
            {
                OnEmployee_idChanging(value);
                ReportPropertyChanging("Employee_id");
                _Employee_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Employee_id");
                OnEmployee_idChanged();
            }
        }
        private global::System.Int32 _Employee_id;
        partial void OnEmployee_idChanging(global::System.Int32 value);
        partial void OnEmployee_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Packing
        {
            get
            {
                return _Packing;
            }
            set
            {
                OnPackingChanging(value);
                ReportPropertyChanging("Packing");
                _Packing = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Packing");
                OnPackingChanged();
            }
        }
        private global::System.String _Packing;
        partial void OnPackingChanging(global::System.String value);
        partial void OnPackingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Defect
        {
            get
            {
                return _Defect;
            }
            set
            {
                OnDefectChanging(value);
                ReportPropertyChanging("Defect");
                _Defect = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Defect");
                OnDefectChanged();
            }
        }
        private global::System.String _Defect;
        partial void OnDefectChanging(global::System.String value);
        partial void OnDefectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String More_info
        {
            get
            {
                return _More_info;
            }
            set
            {
                OnMore_infoChanging(value);
                ReportPropertyChanging("More_info");
                _More_info = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("More_info");
                OnMore_infoChanged();
            }
        }
        private global::System.String _More_info;
        partial void OnMore_infoChanging(global::System.String value);
        partial void OnMore_infoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Diagnostic_result
        {
            get
            {
                return _Diagnostic_result;
            }
            set
            {
                OnDiagnostic_resultChanging(value);
                ReportPropertyChanging("Diagnostic_result");
                _Diagnostic_result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Diagnostic_result");
                OnDiagnostic_resultChanged();
            }
        }
        private global::System.String _Diagnostic_result;
        partial void OnDiagnostic_resultChanging(global::System.String value);
        partial void OnDiagnostic_resultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State_id
        {
            get
            {
                return _State_id;
            }
            set
            {
                OnState_idChanging(value);
                ReportPropertyChanging("State_id");
                _State_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State_id");
                OnState_idChanged();
            }
        }
        private global::System.Int32 _State_id;
        partial void OnState_idChanging(global::System.Int32 value);
        partial void OnState_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated_at;
        partial void OnUpdated_atChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "WarrantyRequest", "Warranty")]
        public Warranty Warranty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warranty>("EntityDataModel.WarrantyRequest", "Warranty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warranty>("EntityDataModel.WarrantyRequest", "Warranty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warranty> WarrantyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warranty>("EntityDataModel.WarrantyRequest", "Warranty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warranty>("EntityDataModel.WarrantyRequest", "Warranty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "EmployeeRequest", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EntityDataModel.EmployeeRequest", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EntityDataModel.EmployeeRequest", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EntityDataModel.EmployeeRequest", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("EntityDataModel.EmployeeRequest", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "RequestItemRequestItemPart", "RequestItemPart")]
        public EntityCollection<RequestItemPart> RequestItemPart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItemPart>("EntityDataModel.RequestItemRequestItemPart", "RequestItemPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItemPart>("EntityDataModel.RequestItemRequestItemPart", "RequestItemPart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "RequestItemRequestItemService", "RequestItemService")]
        public EntityCollection<RequestItemService> RequestItemService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItemService>("EntityDataModel.RequestItemRequestItemService", "RequestItemService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItemService>("EntityDataModel.RequestItemRequestItemService", "RequestItemService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "RequestRequestItem", "Request")]
        public Request Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("EntityDataModel.RequestRequestItem", "Request").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("EntityDataModel.RequestRequestItem", "Request").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Request> RequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Request>("EntityDataModel.RequestRequestItem", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Request>("EntityDataModel.RequestRequestItem", "Request", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "StateRequestItem", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("EntityDataModel.StateRequestItem", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("EntityDataModel.StateRequestItem", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("EntityDataModel.StateRequestItem", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("EntityDataModel.StateRequestItem", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "GoodRequestItem", "Good")]
        public Good Good
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Good>("EntityDataModel.GoodRequestItem", "Good").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Good>("EntityDataModel.GoodRequestItem", "Good").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Good> GoodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Good>("EntityDataModel.GoodRequestItem", "Good");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Good>("EntityDataModel.GoodRequestItem", "Good", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="RequestItemPart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestItemPart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestItemPart object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="requestItem_id">Initial value of the RequestItem_id property.</param>
        /// <param name="part_id">Initial value of the Part_id property.</param>
        /// <param name="serial_num">Initial value of the Serial_num property.</param>
        /// <param name="supplier_id">Initial value of the Supplier_id property.</param>
        /// <param name="date_in">Initial value of the Date_in property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static RequestItemPart CreateRequestItemPart(global::System.Int32 id, global::System.Int32 requestItem_id, global::System.Int32 part_id, global::System.String serial_num, global::System.Int32 supplier_id, global::System.DateTime date_in, global::System.Decimal price)
        {
            RequestItemPart requestItemPart = new RequestItemPart();
            requestItemPart.Id = id;
            requestItemPart.RequestItem_id = requestItem_id;
            requestItemPart.Part_id = part_id;
            requestItemPart.Serial_num = serial_num;
            requestItemPart.Supplier_id = supplier_id;
            requestItemPart.Date_in = date_in;
            requestItemPart.Price = price;
            return requestItemPart;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestItem_id
        {
            get
            {
                return _RequestItem_id;
            }
            set
            {
                OnRequestItem_idChanging(value);
                ReportPropertyChanging("RequestItem_id");
                _RequestItem_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestItem_id");
                OnRequestItem_idChanged();
            }
        }
        private global::System.Int32 _RequestItem_id;
        partial void OnRequestItem_idChanging(global::System.Int32 value);
        partial void OnRequestItem_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Part_id
        {
            get
            {
                return _Part_id;
            }
            set
            {
                OnPart_idChanging(value);
                ReportPropertyChanging("Part_id");
                _Part_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Part_id");
                OnPart_idChanged();
            }
        }
        private global::System.Int32 _Part_id;
        partial void OnPart_idChanging(global::System.Int32 value);
        partial void OnPart_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Serial_num
        {
            get
            {
                return _Serial_num;
            }
            set
            {
                OnSerial_numChanging(value);
                ReportPropertyChanging("Serial_num");
                _Serial_num = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Serial_num");
                OnSerial_numChanged();
            }
        }
        private global::System.String _Serial_num;
        partial void OnSerial_numChanging(global::System.String value);
        partial void OnSerial_numChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Supplier_id
        {
            get
            {
                return _Supplier_id;
            }
            set
            {
                OnSupplier_idChanging(value);
                ReportPropertyChanging("Supplier_id");
                _Supplier_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Supplier_id");
                OnSupplier_idChanged();
            }
        }
        private global::System.Int32 _Supplier_id;
        partial void OnSupplier_idChanging(global::System.Int32 value);
        partial void OnSupplier_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_in
        {
            get
            {
                return _Date_in;
            }
            set
            {
                OnDate_inChanging(value);
                ReportPropertyChanging("Date_in");
                _Date_in = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date_in");
                OnDate_inChanged();
            }
        }
        private global::System.DateTime _Date_in;
        partial void OnDate_inChanging(global::System.DateTime value);
        partial void OnDate_inChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated_at;
        partial void OnUpdated_atChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "PartRequestPart", "Part")]
        public Part Part
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Part>("EntityDataModel.PartRequestPart", "Part").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Part>("EntityDataModel.PartRequestPart", "Part").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Part> PartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Part>("EntityDataModel.PartRequestPart", "Part");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Part>("EntityDataModel.PartRequestPart", "Part", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "SupplierRequestPart", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("EntityDataModel.SupplierRequestPart", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("EntityDataModel.SupplierRequestPart", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("EntityDataModel.SupplierRequestPart", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("EntityDataModel.SupplierRequestPart", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "RequestItemRequestItemPart", "RequestItem")]
        public RequestItem RequestItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestItem>("EntityDataModel.RequestItemRequestItemPart", "RequestItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestItem>("EntityDataModel.RequestItemRequestItemPart", "RequestItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequestItem> RequestItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestItem>("EntityDataModel.RequestItemRequestItemPart", "RequestItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequestItem>("EntityDataModel.RequestItemRequestItemPart", "RequestItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="RequestItemService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestItemService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestItemService object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="requestItem_id">Initial value of the RequestItem_id property.</param>
        /// <param name="service_id">Initial value of the Service_id property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static RequestItemService CreateRequestItemService(global::System.Int32 id, global::System.Int32 requestItem_id, global::System.Int32 service_id, global::System.Decimal price)
        {
            RequestItemService requestItemService = new RequestItemService();
            requestItemService.Id = id;
            requestItemService.RequestItem_id = requestItem_id;
            requestItemService.Service_id = service_id;
            requestItemService.Price = price;
            return requestItemService;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestItem_id
        {
            get
            {
                return _RequestItem_id;
            }
            set
            {
                OnRequestItem_idChanging(value);
                ReportPropertyChanging("RequestItem_id");
                _RequestItem_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestItem_id");
                OnRequestItem_idChanged();
            }
        }
        private global::System.Int32 _RequestItem_id;
        partial void OnRequestItem_idChanging(global::System.Int32 value);
        partial void OnRequestItem_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Service_id
        {
            get
            {
                return _Service_id;
            }
            set
            {
                OnService_idChanging(value);
                ReportPropertyChanging("Service_id");
                _Service_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Service_id");
                OnService_idChanged();
            }
        }
        private global::System.Int32 _Service_id;
        partial void OnService_idChanging(global::System.Int32 value);
        partial void OnService_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "RequestItemRequestItemService", "RequestItem")]
        public RequestItem RequestItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestItem>("EntityDataModel.RequestItemRequestItemService", "RequestItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestItem>("EntityDataModel.RequestItemRequestItemService", "RequestItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequestItem> RequestItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestItem>("EntityDataModel.RequestItemRequestItemService", "RequestItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequestItem>("EntityDataModel.RequestItemRequestItemService", "RequestItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ServiceRequestItemService", "Service")]
        public Service Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("EntityDataModel.ServiceRequestItemService", "Service").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("EntityDataModel.ServiceRequestItemService", "Service").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Service> ServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("EntityDataModel.ServiceRequestItemService", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Service>("EntityDataModel.ServiceRequestItemService", "Service", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Service object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="updated_at">Initial value of the Updated_at property.</param>
        public static Service CreateService(global::System.Int32 id, global::System.String name, global::System.DateTime updated_at)
        {
            Service service = new Service();
            service.Id = id;
            service.Name = name;
            service.Updated_at = updated_at;
            return service;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private global::System.DateTime _Updated_at;
        partial void OnUpdated_atChanging(global::System.DateTime value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ServiceRequestItemService", "RequestItemService")]
        public EntityCollection<RequestItemService> RequestItemService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItemService>("EntityDataModel.ServiceRequestItemService", "RequestItemService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItemService>("EntityDataModel.ServiceRequestItemService", "RequestItemService", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="updated_at">Initial value of the Updated_at property.</param>
        public static State CreateState(global::System.Int32 id, global::System.String name, global::System.DateTime updated_at)
        {
            State state = new State();
            state.Id = id;
            state.Name = name;
            state.Updated_at = updated_at;
            return state;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private global::System.DateTime _Updated_at;
        partial void OnUpdated_atChanging(global::System.DateTime value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "StateRequestItem", "RequestItem")]
        public EntityCollection<RequestItem> RequestItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItem>("EntityDataModel.StateRequestItem", "RequestItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItem>("EntityDataModel.StateRequestItem", "RequestItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "StateRequest", "Request")]
        public EntityCollection<Request> Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("EntityDataModel.StateRequest", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("EntityDataModel.StateRequest", "Request", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="contact_name">Initial value of the Contact_name property.</param>
        public static Supplier CreateSupplier(global::System.Int32 id, global::System.String name, global::System.String phone, global::System.String address, global::System.String contact_name)
        {
            Supplier supplier = new Supplier();
            supplier.Id = id;
            supplier.Name = name;
            supplier.Phone = phone;
            supplier.Address = address;
            supplier.Contact_name = contact_name;
            return supplier;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contact_name
        {
            get
            {
                return _Contact_name;
            }
            set
            {
                OnContact_nameChanging(value);
                ReportPropertyChanging("Contact_name");
                _Contact_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contact_name");
                OnContact_nameChanged();
            }
        }
        private global::System.String _Contact_name;
        partial void OnContact_nameChanging(global::System.String value);
        partial void OnContact_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated_at;
        partial void OnUpdated_atChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "SupplierRequestPart", "RequestPart")]
        public EntityCollection<RequestItemPart> RequestPart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItemPart>("EntityDataModel.SupplierRequestPart", "RequestPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItemPart>("EntityDataModel.SupplierRequestPart", "RequestPart", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Vendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vendor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vendor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Vendor CreateVendor(global::System.Int32 id, global::System.String name)
        {
            Vendor vendor = new Vendor();
            vendor.Id = id;
            vendor.Name = name;
            return vendor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated_at;
        partial void OnUpdated_atChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "VendorPart", "Part")]
        public EntityCollection<Part> Part
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Part>("EntityDataModel.VendorPart", "Part");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Part>("EntityDataModel.VendorPart", "Part", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Warranty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Warranty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Warranty object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="updated_at">Initial value of the Updated_at property.</param>
        public static Warranty CreateWarranty(global::System.Int32 id, global::System.String name, global::System.DateTime updated_at)
        {
            Warranty warranty = new Warranty();
            warranty.Id = id;
            warranty.Name = name;
            warranty.Updated_at = updated_at;
            return warranty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated_at
        {
            get
            {
                return _Updated_at;
            }
            set
            {
                OnUpdated_atChanging(value);
                ReportPropertyChanging("Updated_at");
                _Updated_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated_at");
                OnUpdated_atChanged();
            }
        }
        private global::System.DateTime _Updated_at;
        partial void OnUpdated_atChanging(global::System.DateTime value);
        partial void OnUpdated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "WarrantyRequest", "Request")]
        public EntityCollection<RequestItem> Request
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestItem>("EntityDataModel.WarrantyRequest", "Request");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestItem>("EntityDataModel.WarrantyRequest", "Request", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
